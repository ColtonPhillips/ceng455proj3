/*
 * helper_function.c
 *
 *  Created on: Mar 10, 2017
 *      Author: coltonp
 */
#include "helper_function.h"
#include "mqx_ksdk.h"

//#define NOPRINT

void printlnUnsigned(unsigned char * str) {
#ifndef NOPRINT
	printf("%s\n",str);
#endif
}

void println(char * str) {
#ifndef NOPRINT
	printf("%s\n",(unsigned char * )str);
#endif
}

void printTD(char * msg,_task_id t) {
#ifndef NOPRINT
  	printf("%s\n",msg);
  	TD_STRUCT_PTR pTD = _task_get_td(t);
  	printf("ID: %d\n",(int)pTD->TASK_ID);
  	printf("TEMPLATE INDEX: %d\n",(int)pTD->TEMPLATE_INDEX);
	_mqx_uint priority;
	_task_get_priority(t, &priority);
  	printf("Priority: %d (%d)\n",(int)prioritygettask(t), (int)priority);
  	printf("\n");
#endif
}

bool asrt(bool b) {
	if (b) {
		return b;
	}
	else {
		println("no good");
		_mqx_exit(1);
	}
	return false;
}

bool asrtmsg(char * str, bool b) {
	if (b) {
		return b;
	}
	else {
		println(str);
		_mqx_exit(1);
	}
	return false;
}

void have_fun() {
	if (in_left_button()) {
		out_red_light();
	}
	if (in_right_button()) {
		out_green_light();
	}
	if (in_no_button()) {
		out_blue_light();
	}
	int r = in_right_button();
	int l = in_left_button();
	printf("  %d , %d : \n",l,r);
}

inline void spin(unsigned int n) {
	unsigned int i; char j = 1; char k = 2; char temp = 3;
	for (i = 0; i < n; i++) {
		temp = j;
		j = k;
		k = temp;
	}
}

bool strsame(unsigned char * a, unsigned char * b) {
	return strcmp((char * ) a, (char * )b) == 0;
}

// handy functions for mutex locking/unlocking
void lock(MUTEX_STRUCT_PTR Paccessmutex) {
	if (_mutex_lock(Paccessmutex) != MQX_OK) {
		printf("Mutex failed to lock.\n");
		_mqx_exit(0);
	}
}
void unlock(MUTEX_STRUCT_PTR Paccessmutex) {
	if (_mutex_unlock(Paccessmutex) != MQX_OK) {
		printf("Mutex failed to unlock.\n");
		_mqx_exit(0);
	}
}
